[General]
network = urbandense5gsim.simulations.UrbanDenseNetwork
sim-time-limit = 10s
warmup-period = 1s
output-scalar-file-append = false
seed-set = ${repetition}

# Statistik
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
**.routingRecorder.enabled = false

# General parameters
**.amcType = "NRAmc"
**.targetBler = 0.01
**.blerShift = 5
*.configurator.config = xmldoc("demo.xml")

# Floorplan definition
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

# Mengaktifkan perekaman skalar dan vektor
**.scalar-recording = true
**.vector-recording = true

# Merekam end-to-end delay di penerima (latency)
**.ue[*].app[*].endToEndDelay.record = true
**.ue[*].app[*].endToEndDelay.vector.record = true

# Merekam jumlah paket yang diterima di UE
**.ue[*].app[*].packetReceived:count.record = true

# Merekam jumlah paket yang dikirim dari server
**.server.app[*].packetSent:count.record = true

# Merekam throughput di UE
**.ue[*].app[*].throughput.record = true
**.ue[*].app[*].throughput.vector.record = true

# --------------------------------------------------------
# Config "Single-UE"
#
# Skenario sederhana dengan satu UE terhubung ke satu gNB.
# Server mengirimkan traffic CBR 800 kbps ke UE.
#
[Config Single-UE]

# Posisi gNodeB
*.gnb.mobility.initialX = 500m
*.gnb.mobility.initialY = 500m

# Konfigurasi UE
*.numUe = 1

# Posisi UE (400m dari gNB)
*.ue[*].mobility.initialX = 500m
*.ue[*].mobility.initialY = 900m

# Menghubungkan NIC UE ke gNB
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

# Pengaturan Aplikasi
*.ue[*].numApps = 1
*.server.numApps = 1

*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[*].localPort = 1000

*.server.app[*].typename = "CbrSender"
*.server.app[*].PacketSize = 1000     # Ukuran paket dalam byte
*.server.app[*].sampling_time = 0.01s  # Interval antar paket
*.server.app[*].destAddress = "ue[0]"  # Alamat UE
*.server.app[*].destPort = 1000
*.server.app[*].localPort = 3088
*.server.app[*].startTime = uniform(0.01s, 0.05s)

# --------------------------------------------------------
# Config "BgTraffic"
#
# Menambahkan satu sel latar belakang dengan 10 UE untuk
# menghasilkan interferensi antar sel. Setiap UE latar belakang
# menghasilkan traffic CBR 800 kbps.
#
[Config BgTraffic]
extends = Single-UE

# Konfigurasi sel latar belakang
*.numBgCells = 1

*.bgCell[*].bgScheduler.isNr = true
*.bgCell[*].bgScheduler.txPower = 23

# Posisi gNodeB latar belakang
*.bgCell[*].mobility.initialX = 750m
*.bgCell[*].mobility.initialY = 1000m

# Jumlah dan posisi UE latar belakang
*.bgCell[*].bgTrafficGenerator.numBgUes = 10
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m, 1000m)
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(500m, 1000m)

# Traffic latar belakang
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s, 0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 1000B    # Tanpa unit
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 0.01s

# --------------------------------------------------------
# Config "Multiple-UEs"
#
# Menambahkan sejumlah UE dalam sel utama. Semua UE menerima
# traffic CBR 800 kbps dari server.
#
[Config Multiple-UEs]
extends = BgTraffic

# Jumlah UE variabel
*.numUe = ${numUe=1,5,10,15,20}

# Posisi UE
*.ue[*].mobility.initialX = uniform(0m, 1000m)
*.ue[*].mobility.initialY = uniform(0m, 1000m)

# Server memiliki satu aplikasi per UE
*.server.numApps = ${numUe}

# Menghubungkan aplikasi server ke masing-masing UE
*.server.app[*].typename = "CbrSender"
*.server.app[*].PacketSize = 1000
*.server.app[*].sampling_time = 0.01s
*.server.app[*].destAddress = "ue[" + string(index) + "]"
*.server.app[*].destPort = 1000
*.server.app[*].localPort = 3088 + index
*.server.app[*].startTime = uniform(0.01s, 0.05s)

# UE aplikasi penerima
*.ue[*].numApps = 1
*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[*].localPort = 1000

# Menyertakan variabel iterasi dalam nama file output
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec

# --------------------------------------------------------
# Config "Sub6GHz"
#
# Mengkonfigurasi jaringan untuk menggunakan frekuensi sub-6GHz (misalnya, 3.5GHz)
#
[Config Sub6GHz]
extends = Multiple-UEs

# Mengatur frekuensi carrier ke 3.5GHz
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 3.5GHz
*.carrierAggregation.componentCarrier[0].numBands = 6
*.carrierAggregation.componentCarrier[0].numerologyIndex = 1  # Spasi subcarrier 30kHz

*.gnb.cellularNic.numCarriers = 1
*.gnb.cellularNic.channelModel[0].componentCarrierIndex = 0
*.gnb.cellularNic.channelModel[0].carrierFrequency = 3.5GHz

*.ue[*].cellularNic.numNRCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.nrChannelModel[0].carrierFrequency = 3.5GHz

# Mengkonfigurasi background cell
*.bgCell[*].bgScheduler.carrierFrequency = 3.5GHz
*.bgCell[*].bgScheduler.numerologyIndex = 1
*.bgCell[*].bgScheduler.numBands = 6
*.bgCell[*].bgScheduler.isNr = true

# --------------------------------------------------------
# Config "mmWave"
#
# Mengkonfigurasi jaringan untuk menggunakan frekuensi mmWave (misalnya, 28GHz)
#
[Config mmWave]
extends = Multiple-UEs

# Mengatur frekuensi carrier ke 28GHz
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 28GHz
*.carrierAggregation.componentCarrier[0].numBands = 6
*.carrierAggregation.componentCarrier[0].numerologyIndex = 3  # Spasi subcarrier 120kHz

*.gnb.cellularNic.numCarriers = 1
*.gnb.cellularNic.channelModel[0].componentCarrierIndex = 0
*.gnb.cellularNic.channelModel[0].carrierFrequency = 28GHz

*.ue[*].cellularNic.numNRCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.nrChannelModel[0].carrierFrequency = 28GHz

# Mengkonfigurasi background cell
*.bgCell[*].bgScheduler.carrierFrequency = 28GHz
*.bgCell[*].bgScheduler.numerologyIndex = 3
*.bgCell[*].bgScheduler.numBands = 6
*.bgCell[*].bgScheduler.isNr = true

# --------------------------------------------------------
